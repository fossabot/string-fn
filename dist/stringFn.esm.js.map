{"version":3,"file":"stringFn.esm.js","sources":["../modules/between.js","../modules/constants.js","../modules/splitToWords.js","../modules/camelCase.js"],"sourcesContent":["import {\n  last,\n  split,\n  head,\n} from 'rambda'\n\nexport default function between (str, left, right) {\n  return last(\n    split(\n      left,\n      head(split(right, str))\n    )\n  ).trim()\n}","export const WORDS = /[A-Z]?[a-z]+|[A-Z]+(?![a-z])+/g\nexport const WORDS_EXTENDED = /[A-Z\\xC0-\\xD6\\xD8-\\xDE]?[a-z\\xDF-\\xF6\\xF8-\\xFF]+|[A-Z\\xC0-\\xD6\\xD8-\\xDE]+(?![a-z\\xDF-\\xF6\\xF8-\\xFF])/g\nexport const PUNCTUATIONS = /[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,\\-./:;<=>?@[\\]^_`{|}~]/g\nexport const HTML_TAGS = /<[^>]*>/g","import {match} from 'rambda'\nimport {WORDS} from './constants'\n\nconst splitToWords = match(WORDS)\n\nexport default splitToWords\n","import {\n  join,\n  map,\n  toUpper,\n  head,\n  toLower,\n  tail\n} from 'rambda'\n\nimport splitToWords from './splitToWords'\n\nexport default function camelCase (str, flag = false) {\n  const result = join(\n    \"\",\n    map(\n      val => `${ toUpper(head(val)) }${ toLower(tail(val)) }`,\n      splitToWords(str)\n    )\n  )\n\n  return `${ toLower(head(result)) }${ tail(result) }`\n}\n"],"names":["between","str","left","right","last","split","head","trim","WORDS","splitToWords","match","camelCase","result","join","map","toUpper","val","toLower","tail"],"mappings":";;AAMe,SAASA,OAAT,CAAkBC,GAAlB,EAAuBC,IAAvB,EAA6BC,KAA7B,EAAoC;SAC1CC,KACLC,MACEH,IADF,EAEEI,KAAKD,MAAMF,KAAN,EAAaF,GAAb,CAAL,CAFF,CADK,EAKLM,IALK,EAAP;;;ACPK,IAAMC,QAAQ,gCAAd;;ACGP,IAAMC,eAAeC,MAAMF,KAAN,CAArB;;ACQe,SAASG,SAAT,CAAoBV,GAApB,EAAuC;MAC9CW,SAASC,KACb,EADa,EAEbC,IACE;gBAAWC,QAAQT,KAAKU,GAAL,CAAR,CAAX,GAAkCC,QAAQC,KAAKF,GAAL,CAAR,CAAlC;GADF,EAEEP,aAAaR,GAAb,CAFF,CAFa,CAAf;;cAQWgB,QAAQX,KAAKM,MAAL,CAAR,CAAX,GAAqCM,KAAKN,MAAL,CAArC;;;;;"}